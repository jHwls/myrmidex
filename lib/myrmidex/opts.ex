defmodule Myrmidex.Opts do
  @moduledoc false

  @schema NimbleOptions.new!(
            generator_schema: [
              type: :atom,
              type_doc: false,
              default: Myrmidex.GeneratorSchemas.Default
            ],
            limit_generation?: [
              type: :boolean,
              default: false,
              doc: "Constant generators in fixed map generation unless generators are affixed."
            ],
            attr_keys: [
              type: {:in, [:string, :atom]},
              type_doc: "`:string` or `:atom`",
              doc: "Force the type of generated attr keys for maps and structs."
            ],
            drop_autogenerate?: [
              type: :boolean,
              default: false,
              doc: "Include autogenerated ids and other fields for EctoSchemas."
            ],
            drop_associations?: [
              type: :boolean,
              default: false,
              doc: "Include association fields for EctoSchemas."
            ],
            list_opts: [
              type: :keyword_list,
              default: [max_length: 30],
              doc: "StreamData options for list generators."
            ],
            default_many: [
              type: {:or, [:pos_integer, {:struct, Range}]},
              default: 2..20,
              doc: "The default count for many operations."
            ]
          )

  @doc false
  def schema, do: @schema

  @doc false
  def validate!(opts) do
    NimbleOptions.validate!(opts, @schema)
  end
end
